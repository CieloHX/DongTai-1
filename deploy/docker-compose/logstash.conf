input {
  tcp {
    port => 5044
    type => "tcp"
  }
  tcp {
    port => 5045
    type => "log"
  }
}
filter {
  if [type] == "tcp"{
    json{
      source => ["message"]
      remove_field => ["message","@version","port","host","date"]
    }
    ruby {
       code => "event.set('timestamp', event.get('@timestamp').time.localtime + 8*60*60)"
    }
    ruby {
       code => "event.set('@timestamp',event.get('timestamp'))"
    }
    mutate {
       remove_field => ["timestamp"]
    }
  }
  if [type] == "log"{
    json{
      source => ["message"]
    }
  }
}
output {
  if [type] == "tcp"{
    file {
        path => ["/tmp/logstash/agent/%{[agent]}/%{+YYYY.MM.dd}.log"]
    }
  }
  if [type] == "log"{
    #file {
    #    path => ["/tmp/logstash/agent/server/%{+YYYY.MM.dd}.log"]
    #}
    analyticdb {
    #jdbc {
        driver_class => "com.mysql.jdbc.Driver"
        connection_string => "jdbc:mysql://dongtai-mysql:3306/dongtai_webapi"
        username => "root"
        password => "dongtai-iast"
        statement => [ "INSERT INTO `iast_agent_method_pool` (`agent_id`,`url`, `uri`, `http_method`, `http_scheme`, `http_protocol`, `req_header`, `req_params`, `req_data`, `res_header`, `res_body`, `context_path`, `method_pool`, `clent_ip`, `create_time`, `update_time`, `pool_sign`, `req_header_for_search`, `uri_sha1`) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)","agent_id","url","uri","http_method","http_scheme","http_protocol","req_header","req_params","req_data","res_header","res_body","context_path","method_pool","clent_ip","create_time","update_time","pool_sign","req_header_for_search","uri_sha1"]
    }
  }
}
